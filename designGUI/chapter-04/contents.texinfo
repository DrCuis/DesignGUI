@node What is a Morph after all?
@chapter What is a Morph after all?

@*

The Cuis' Morph framework is fundamental to @Cuis{}, every single visual piece the user sees and interacts with in the Cuis' window is a Morph. A Morph offers both visual representation and interactivity with keyboard and mouse inputs.

Any Morph can contain other Morphs. We already know a @class{LayoutMorph} contains several Morphs and manage the way there are layed out; these is reflected in the @smalltalk{submorphs} attribute of each Morph, when this collection is empty it means there is no sub-morph. In the other hand, a Morph knows about its unique owner: the @smalltalk{owner} attribute of each Morph refers to the Morph owning it. And as you can expect it, the owner Morph @smalltalk{submorphs} attribute contains the owned attribute.

Then what happen when the @smalltalk{owner} attribute is @smalltalk{nil}? The Morph is not visible! So in @cuis{}, there is a special Morph, a @class{WorldMorph} instance, representing the top Morph of @Cuis{}. Guess what? It is the only Morph without an owner and still visible.

WorldMorph allInstances  { [world]} .



A Morph (from the Greek "shape" or "form") is an interactive graphical object. General information on the Morphic system can be found at http://wiki.squeak.org/squeak/morph. 

Morphs exist in a tree, rooted at a World (a WorldMorph). The morphs owned by a morph are its submorphs. Morphs are drawn recursively; if a Morph has no owner it never gets 
drawn. To hide a Morph and its submorphs, send the #visible: message. 

Subclass PlacedMorph defines a local coordinate system (see its class comment). Morphs NOT in the PlacedMorph hierarchy live in the space defined by their owner. Their local coordinate system is the same as the owner's. They ignore #morphPosition:.

Local coordinates are used in the #drawOn: method (the Canvas understands positions in the local coordinate system), for the positions of submorphs (for example #morphPosition and #morphPosition:) and for positions carried by mouse events.

Events are delivered to morphs in Z-order, i.e. if a morph occludes another the event is only delivered to the foremost (just like physical objects). Events received by a morph carry positions in the local coordinate system.

Structure:
instance var 				Type 						Description 
owner 				Morph or nil		 				My parent Morph, or nil for the top-level Morph, which is a WorldMorph
submorphs 				Array 						My child Morphs.


@menu
@end menu

